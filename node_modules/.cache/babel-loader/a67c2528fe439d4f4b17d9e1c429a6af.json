{"ast":null,"code":"import _classCallCheck from \"/Users/yvonne/Desktop/testForNode/vocabulary/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yvonne/Desktop/testForNode/vocabulary/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yvonne/Desktop/testForNode/vocabulary/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yvonne/Desktop/testForNode/vocabulary/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yvonne/Desktop/testForNode/vocabulary/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yvonne/Desktop/testForNode/vocabulary/src/containers/operate.js\";\n\n/*\n   Home 主页\n*/\nimport React from 'react'; // import {Data} from '../config/data';\n\nvar wordProp = ['pron.', 'adj.', 'adv.', 'vt.', 'vi.', 'num.', 'art.', 'prep.', 'conj.', 'interj.', 'v.', 'n.'];\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n    _this.state = {\n      word: \"one \\n\\u82F1  [w\\u028Cn]   \\u7F8E  [w\\u028Cn]\\npron. \\u4E00\\u4E2A\\u4EBA\\uFF1B\\u4EFB\\u4F55\\u4EBA\\nadj. \\u4E00\\u7684\\uFF1B\\u552F\\u4E00\\u7684\\nn. \\u4E00\\nnum. \\u4E00\\uFF1B\\u4E00\\u4E2A\\nn. (One)\\u4EBA\\u540D\\uFF1B(\\u8001)\\u6E29\",\n      data: ''\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"changeMeaning\",\n    value: function changeMeaning(event) {\n      this.setState({\n        word: event.target.value\n      });\n    }\n  }, {\n    key: \"returnMeaningObj\",\n    value: function returnMeaningObj(wordStr, prop) {\n      var res = [];\n      var idx = wordStr.indexOf(prop);\n\n      while (idx !== -1) {\n        res.push({\n          prop: prop,\n          index: idx\n        });\n        idx = wordStr.indexOf(prop, idx + 1);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"splitProp\",\n    value: function splitProp(str) {\n      str = str + '.';\n      wordProp.forEach(function (p) {\n        var index = str.indexOf(p);\n\n        if (index >= 0) {\n          console.log(str.slice(0, index));\n          return [str.slice(0, index), \"\".concat(p, \".\")];\n        }\n      });\n    }\n  }, {\n    key: \"addWord\",\n    value: function addWord() {\n      var _this2 = this;\n\n      var wordStr = this.state.word;\n      var initArr = wordStr.split('.');\n      var splitArr = initArr.map(function (item) {\n        return _this2.splitProp(item);\n      });\n      console.log(splitArr); // this.getPropAndPos(initArr[0]);    \n      //     // wordMeaningArr.push({\n      //     //   property: target.prop,\n      //     //   desc: wordStr.slice(target.index + target.prop.length, nextTarget.index).split('；')\n      //     // });\n      // console.log('word', word);\n      // console.log('wordMeaningArr', wordMeaningArr);\n      // {\n      //   word:'clause',\n      //   meaning: [\n      //     {\n      //       property: 'n',\n      //       desc: ['条款', '从句']\n      //     }\n      //   ]\n      // },\n    } // <input value={this.state.word} placeholder='word' onChange={(e) => this.changeWord(e)}/>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        placeholder: \"meaning\",\n        value: this.state.word,\n        rows: \"10\",\n        onChange: function onChange(e) {\n          return _this3.changeMeaning(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.addWord();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"ADD\"), this.state.data);\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/yvonne/Desktop/testForNode/vocabulary/src/containers/operate.js"],"names":["React","wordProp","Home","props","state","word","data","event","setState","target","value","wordStr","prop","res","idx","indexOf","push","index","str","forEach","p","console","log","slice","initArr","split","splitArr","map","item","splitProp","e","changeMeaning","addWord","Component"],"mappings":";;;;;;;AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,QAAQ,GAAG,CACf,OADe,EAEf,MAFe,EAGf,MAHe,EAIf,KAJe,EAKf,KALe,EAMf,MANe,EAOf,MAPe,EAQf,OARe,EASf,OATe,EAUf,SAVe,EAWf,IAXe,EAYf,IAZe,CAAjB;;IAeMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,kOADO;AAQXC,MAAAA,IAAI,EAAE;AARK,KAAb;AAFiB;AAYlB;;;;kCAEaC,K,EAAO;AACnB,WAAKC,QAAL,CAAc;AAACH,QAAAA,IAAI,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AACD;;;qCAEgBC,O,EAASC,I,EAAM;AAC9B,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAIC,GAAG,GAAGH,OAAO,CAACI,OAAR,CAAgBH,IAAhB,CAAV;;AACA,aAAOE,GAAG,KAAK,CAAC,CAAhB,EAAmB;AACjBD,QAAAA,GAAG,CAACG,IAAJ,CAAS;AACPJ,UAAAA,IAAI,EAAJA,IADO;AAEPK,UAAAA,KAAK,EAAEH;AAFA,SAAT;AAIAA,QAAAA,GAAG,GAAGH,OAAO,CAACI,OAAR,CAAgBH,IAAhB,EAAsBE,GAAG,GAAG,CAA5B,CAAN;AACD;;AACD,aAAOD,GAAP;AACD;;;8BAESK,G,EAAK;AACbA,MAAAA,GAAG,GAAGA,GAAG,GAAC,GAAV;AACAjB,MAAAA,QAAQ,CAACkB,OAAT,CAAiB,UAACC,CAAD,EAAO;AACtB,YAAMH,KAAK,GAAGC,GAAG,CAACH,OAAJ,CAAYK,CAAZ,CAAd;;AACA,YAAIH,KAAK,IAAE,CAAX,EAAc;AACZI,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAaN,KAAb,CAAZ;AACA,iBAAO,CAACC,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAaN,KAAb,CAAD,YAAyBG,CAAzB,OAAP;AACD;AACF,OAND;AAOD;;;8BAES;AAAA;;AACR,UAAMT,OAAO,GAAG,KAAKP,KAAL,CAAWC,IAA3B;AACA,UAAMmB,OAAO,GAAGb,OAAO,CAACc,KAAR,CAAc,GAAd,CAAhB;AACA,UAAMC,QAAQ,GAAEF,OAAO,CAACG,GAAR,CAAY,UAACC,IAAD,EAC1B;AAAC,eAAO,MAAI,CAACC,SAAL,CAAeD,IAAf,CAAP;AAA6B,OADhB,CAAhB;AAIAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ,EAPQ,CAUR;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,K,CAED;;;;6BAES;AAAA;;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAU,QAAA,WAAW,EAAC,SAAtB;AAAgC,QAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,IAAlD;AAAwD,QAAA,IAAI,EAAC,IAA7D;AAAkE,QAAA,QAAQ,EAAE,kBAACyB,CAAD;AAAA,iBAAO,MAAI,CAACC,aAAL,CAAmBD,CAAnB,CAAP;AAAA,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,OAAL,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGG,KAAK5B,KAAL,CAAWE,IAHd,CADF;AAOD;;;;EApFgBN,KAAK,CAACiC,S;;AAuFzB,eAAe/B,IAAf","sourcesContent":["/*\n   Home 主页\n*/\nimport React from 'react';\n// import {Data} from '../config/data';\n\nconst wordProp = [\n  'pron.',\n  'adj.',\n  'adv.',\n  'vt.',\n  'vi.',\n  'num.',\n  'art.',\n  'prep.',\n  'conj.',\n  'interj.',\n  'v.',\n  'n.',\n]\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: `one \n英  [wʌn]   美  [wʌn]\npron. 一个人；任何人\nadj. 一的；唯一的\nn. 一\nnum. 一；一个\nn. (One)人名；(老)温`,\n      data: '',\n    };\n  }\n\n  changeMeaning(event) {\n    this.setState({word: event.target.value});\n  }\n\n  returnMeaningObj(wordStr, prop) {\n    const res = [];\n    let idx = wordStr.indexOf(prop);\n    while (idx !== -1) {\n      res.push({\n        prop,\n        index: idx\n      });\n      idx = wordStr.indexOf(prop, idx + 1);\n    }\n    return res;\n  }\n\n  splitProp(str) {\n    str = str+'.';\n    wordProp.forEach((p) => {\n      const index = str.indexOf(p);\n      if (index>=0) {\n        console.log(str.slice(0, index));\n        return [str.slice(0, index), `${p}.`];\n      }\n    });\n  }\n\n  addWord() {\n    const wordStr = this.state.word;\n    const initArr = wordStr.split('.');\n    const splitArr =initArr.map((item) => \n      {return this.splitProp(item);}\n    );\n\n    console.log(splitArr);\n    \n    \n    // this.getPropAndPos(initArr[0]);    \n    \n    //     // wordMeaningArr.push({\n    //     //   property: target.prop,\n    //     //   desc: wordStr.slice(target.index + target.prop.length, nextTarget.index).split('；')\n    //     // });\n    // console.log('word', word);\n\n    // console.log('wordMeaningArr', wordMeaningArr);\n\n    // {\n    //   word:'clause',\n    //   meaning: [\n    //     {\n    //       property: 'n',\n    //       desc: ['条款', '从句']\n    //     }\n    //   ]\n    // },\n  }\n\n  // <input value={this.state.word} placeholder='word' onChange={(e) => this.changeWord(e)}/>\n\n  render() {\n    return (\n      <React.Fragment>\n        <textarea placeholder='meaning' value={this.state.word} rows='10' onChange={(e) => this.changeMeaning(e)}/>\n        <button onClick={() => this.addWord()}>ADD</button>\n        {this.state.data}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}